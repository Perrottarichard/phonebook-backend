{"version":3,"sources":["components/services.js","components/AddEntryForm.js","components/FilterBox.js","components/DisplayDirectory.js","components/EditEntryForm.js","components/SuccessMessage.js","components/ErrorMessage.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newListing","post","id","newObject","put","delete","AddEntryForm","props","persons","newName","newNumber","setPersons","setNewName","setNewNumber","handleNumberInput","handlePersonInput","setSuccessMessage","onSubmit","event","preventDefault","filter","p","name","length","window","confirm","number","map","services","listing","person","setTimeout","alert","returnedListing","concat","value","onChange","type","FilterBox","searchName","handleSearchName","DisplayDirectory","showAll","removeEntry","entriesToShow","toString","toLowerCase","indexOf","key","onClick","EditEntryForm","editName","setEditName","editNumber","setEditNumber","handleNumberEdit","handleNameEdit","setToggleForm","toggleForm","showForm","editById","handleIdEdit","setEditById","setErrorMessage","catch","error","placeholder","SuccessMessage","message","className","ErrorMessage","style","color","App","useState","setSearchName","setShowAll","errorMessage","successMessage","useEffect","allPersons","console","log","target","single","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48ef1107.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newListing => {\n    const request = axios.post(baseUrl, newListing)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nexport default {\n    getAll,\n    create,\n    update,\n    remove\n}","import React from 'react';\nimport services from './services'\n\nconst AddEntryForm = (props) => {\n\n    const { persons, newName, newNumber, setPersons, setNewName, setNewNumber, handleNumberInput, handlePersonInput, setSuccessMessage } = props\n\n    const addEntry = (event) => {\n        event.preventDefault()\n        if (persons.filter(p => p.name === newName).length > 0 && newNumber.length !== 0) {\n            let result = window.confirm(`${newName} is already in the phonebook. Would you like to replace the old number?`)\n            if (result) {\n                let newListing = { name: newName, number: newNumber };\n                let id = persons.filter(p => p.name === newName).map(p => p.id);\n                services.update(id, newListing).then(listing => {\n                    setPersons(persons.map(person => person.name !== newName ? person : listing)\n                    )\n                })\n                setNewName('')\n                setNewNumber('')\n                setSuccessMessage('Number successfully replaced')\n                setTimeout(() => {\n                    setSuccessMessage(null)\n                }, 3000);\n            }\n        }\n        else if (persons.filter(p => p.name === newName).length > 0) {\n            alert(`${newName} is already in the phonebook. You can replace the number with a new one by using the form`)\n        }\n        else {\n            const listing = {\n                name: newName,\n                number: newNumber\n            }\n            services.create(listing).then(returnedListing => {\n                setPersons(persons.concat(returnedListing))\n            })\n            setNewName('')\n            setNewNumber('')\n            setSuccessMessage('Contact successfully added')\n            setTimeout(() => {\n                setSuccessMessage(null)\n            }, 3000)\n        }\n    }\n\n    return (\n        <div>\n            <h2>Add New Entry</h2>\n            <form onSubmit={addEntry}>\n                <div>\n                    Name: <input\n                        value={newName}\n                        onChange={handlePersonInput} />\n                </div>\n                <div>\n                    Number: <input\n                        value={newNumber}\n                        onChange={handleNumberInput} /></div>\n                <div>\n                    <button type=\"submit\">add</button>\n                </div>\n            </form>\n        </div>\n    )\n}\nexport default AddEntryForm;\n","import React from 'react';\n\nconst FilterBox = (props) => {\n\n    const { searchName, handleSearchName } = props;\n    return (\n        <div>\n            Filter shown: <input\n                value={searchName}\n                onChange={handleSearchName} />\n        </div>\n    )\n}\nexport default FilterBox;","import React from 'react';\n\nconst DisplayDirectory = (props) => {\n\n    const { persons, showAll, searchName, removeEntry } = props;\n\n    const entriesToShow = showAll ? persons : persons.filter(p => p.name.toString().toLowerCase().indexOf(searchName.toLowerCase()) !== -1)\n    return (\n        <div>\n            {entriesToShow.map(p => <div key={p.id}><ul key={p.name}>ID: {p.id}<br></br> Name: {p.name}<br></br> Number: {p.number} <button key={p.id} onClick={() => removeEntry(p.id)}>Delete</button></ul> </div>)}\n        </div>\n    )\n}\nexport default DisplayDirectory;","import React from 'react';\nimport services from './services'\n\nconst EditEntryForm = (props) => {\n\n    const { persons, setPersons, editName, setEditName, editNumber, setEditNumber, handleNumberEdit, handleNameEdit, setToggleForm, toggleForm, showForm, editById, handleIdEdit, setEditById, setErrorMessage } = props;\n\n    const editEntry = (event) => {\n        event.preventDefault();\n        const listing = {\n            id: editById,\n            name: editName,\n            number: editNumber,\n        }\n        services.update(editById, listing).catch(error => {\n            setErrorMessage(\n                `That contact was already removed from server`\n            )\n            setTimeout(() => {\n                setErrorMessage(null)\n            }, 5000)\n        }).then(setPersons(persons.map(person => person.id !== editById ? person : listing)))\n        setEditName('')\n        setEditNumber('')\n        setEditById('')\n        setToggleForm(false)\n    }\n    return (\n        <div>\n            <h2>Update Existing Entry By ID:</h2>\n            {!toggleForm ?\n                <div>\n                    <input value={editById} onChange={handleIdEdit} placeholder={'Enter ID'}></input><div>\n                        <button onClick={showForm}>Submit ID</button></div></div> :\n                <form onSubmit={editEntry}>\n                    <div>\n                        Name: <input\n                            value={editName}\n                            onChange={handleNameEdit}\n                            placeholder={'New name'} />\n                    </div>\n                    <div>\n                        Number: <input\n                            value={editNumber}\n                            onChange={handleNumberEdit} placeholder={'New number'} /></div>\n                    <div>\n                        <button onClick={showForm}>Go Back</button>\n                        <button type=\"submit\">Submit Update</button>\n                    </div>\n                </form>}\n        </div>\n\n    )\n}\nexport default EditEntryForm;\n","import React from 'react';\n\nconst SuccessMessage = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className=\"success\">\n            <h1>{message}</h1>\n        </div>\n    )\n}\nexport default SuccessMessage;","import React from 'react';\n\nconst ErrorMessage = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n    return (\n        <div className=\"error\" >\n            <h1 style={{ color: 'red' }}>{message}</h1>\n        </div>\n    )\n}\n\n\nexport default ErrorMessage;","import React, { useState, useEffect } from 'react'\nimport AddEntryForm from './components/AddEntryForm';\nimport FilterBox from './components/FilterBox';\nimport DisplayDirectory from './components/DisplayDirectory';\nimport services from './components/services'\nimport EditEntryForm from './components/EditEntryForm';\nimport SuccessMessage from './components/SuccessMessage';\nimport ErrorMessage from './components/ErrorMessage';\n\nconst App = () => {\n\n  //CONST VARIABLES\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [searchName, setSearchName] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [editName, setEditName] = useState('')\n  const [editNumber, setEditNumber] = useState('')\n  const [toggleForm, setToggleForm] = useState(false);\n  const [editById, setEditById] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const [successMessage, setSuccessMessage] = useState('')\n\n  useEffect(() => {\n    services.getAll()\n      .then(allPersons => {\n        setPersons(allPersons)\n      })\n    console.log('useEffect running')\n  }, [])\n\n  //EVENT HANDLERS\n  const handlePersonInput = (event) => {\n    setNewName(event.target.value);\n  }\n  const handleNumberInput = (event) => {\n    setNewNumber(event.target.value);\n  }\n  const handleNumberEdit = (event) => {\n    setEditNumber(event.target.value);\n  }\n  const handleNameEdit = (event) => {\n    setEditName(event.target.value);\n  }\n  const handleIdEdit = (event) => {\n    setEditById(event.target.value);\n  }\n  const removeEntry = (id) => {\n    let result = window.confirm(`Are you sure you want to delete ${persons.filter(person => person.id === id).map(single => single.name)}?`)\n    if (result) {\n      services.remove(id).then(\n        setPersons(persons.filter(person => person.id !== id)\n        ))\n        .catch(error => {\n          setErrorMessage(\n            `That contact was already removed from server`\n          )\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n        })\n      setSuccessMessage('Contact successfully deleted')\n      setTimeout(() => {\n        setSuccessMessage(null)\n      }, 3000)\n    }\n  }\n\n  const handleSearchName = (event) => {\n    if (event.target.value.length > 0) {\n      setShowAll(false)\n      setSearchName(event.target.value);\n    } else {\n      setShowAll(true)\n      setSearchName(event.target.value);\n    }\n  }\n  const showForm = () => {\n    setToggleForm(!toggleForm);\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <SuccessMessage message={successMessage} />\n      <ErrorMessage message={errorMessage} />\n      <FilterBox\n        searchName={searchName}\n        handleSearchName={handleSearchName} />\n      <AddEntryForm\n        persons={persons}\n        setPersons={setPersons}\n        newName={newName}\n        setNewName={setNewName}\n        handlePersonInput={handlePersonInput}\n        handleNumberInput={handleNumberInput}\n        newNumber={newNumber}\n        setNewNumber={setNewNumber}\n        setSuccessMessage={setSuccessMessage}\n      />\n      <EditEntryForm\n        persons={persons}\n        setPersons={setPersons}\n        editName={editName}\n        setEditName={setEditName}\n        handleNameEdit={handleNameEdit}\n        handleNumberEdit={handleNumberEdit}\n        editNumber={editNumber}\n        setEditNumber={setEditNumber}\n        toggleForm={toggleForm}\n        setToggleForm={setToggleForm}\n        showForm={showForm}\n        editById={editById}\n        setEditById={setEditById}\n        handleIdEdit={handleIdEdit}\n        setErrorMessage={setErrorMessage}\n        setSuccessMessage={setSuccessMessage}\n      />\n      <h2>Numbers</h2>\n      <DisplayDirectory\n        setPersons={setPersons}\n        persons={persons}\n        showAll={showAll}\n        searchName={searchName}\n        removeEntry={removeEntry} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}