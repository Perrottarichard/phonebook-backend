{"version":3,"sources":["components/services.js","components/AddEntryForm.js","components/FilterBox.js","components/DisplayDirectory.js","components/EditEntryForm.js","components/SuccessMessage.js","components/ErrorMessage.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newListing","post","id","newObject","put","delete","AddEntryForm","props","persons","newName","newNumber","setPersons","setNewName","setNewNumber","handleNumberInput","handlePersonInput","setSuccessMessage","setErrorMessage","onSubmit","event","preventDefault","filter","p","name","length","window","confirm","map","services","number","catch","error","setTimeout","allPersons","alert","console","log","returnedListing","undefined","concat","value","onChange","type","FilterBox","searchName","handleSearchName","DisplayDirectory","showAll","removeEntry","entriesToShow","toString","toLowerCase","indexOf","key","onClick","EditEntryForm","editName","setEditName","editNumber","setEditNumber","handleNumberEdit","handleNameEdit","setToggleForm","toggleForm","showForm","editById","handleIdEdit","setEditById","listing","person","placeholder","SuccessMessage","message","className","ErrorMessage","style","color","App","useState","setSearchName","setShowAll","errorMessage","successMessage","useEffect","target","single","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3ed65f4.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newListing => {\n    const request = axios.post(baseUrl, newListing)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nexport default {\n    getAll,\n    create,\n    update,\n    remove\n}","import React from 'react';\nimport services from './services'\n\nconst AddEntryForm = (props) => {\n\n    const { persons, newName, newNumber, setPersons, setNewName, setNewNumber, handleNumberInput, handlePersonInput, setSuccessMessage, setErrorMessage } = props\n\n    const addEntry = (event) => {\n        event.preventDefault()\n        if (persons.filter(p => p.name === newName).length > 0 && newNumber.length >= 8) {\n            let result = window.confirm(`${newName} is already in the phonebook. Would you like to replace the old number?`)\n            if (result) {\n                let id = persons.filter(p => p.name === newName).map(p => p.id);\n                let newListing = { name: newName, number: newNumber };\n                services.update(id, newListing).catch(error => {\n                    setErrorMessage(error.response.data)\n                    setTimeout(() => {\n                        setErrorMessage(null)\n                    }, 5000);\n                }).then(services.getAll()\n                    .then(allPersons => {\n                        setPersons(allPersons)\n                    }))\n                setNewName('')\n                setNewNumber('')\n                setSuccessMessage('Number successfully replaced')\n                setTimeout(() => {\n                    setSuccessMessage(null)\n                }, 3000);\n            }\n        }\n        else if (persons.filter(p => p.name === newName).length > 0) {\n            alert(`${newName} is already in the phonebook. You can replace the number with a new one by using the form. Enter the name, and enter a new number at least 8 digits long`)\n        }\n        else {\n            const listing = {\n                name: newName,\n                number: newNumber\n            }\n            services.create(listing).catch(error => {\n                console.log(error);\n                setErrorMessage('Something went wrong. Make sure the name is at least 3 characters long and the phone number is at least 8 digits long')\n                setTimeout(() => {\n                    setErrorMessage(null)\n                }, 7000);\n            }).then(returnedListing => {\n                if (returnedListing.id !== undefined) {\n                    setPersons(persons.concat(returnedListing))\n                    setNewName('')\n                    setNewNumber('')\n                    setSuccessMessage('Contact successfully added')\n                    setTimeout(() => {\n                        setSuccessMessage(null)\n                    }, 3000)\n                }\n            })\n        }\n    }\n\n    return (\n        <div>\n            <h2>Add New Entry</h2>\n            <form onSubmit={addEntry}>\n                <div>\n                    Name: <input\n                        value={newName}\n                        onChange={handlePersonInput} />\n                </div>\n                <div>\n                    Number: <input\n                        value={newNumber}\n                        onChange={handleNumberInput} /></div>\n                <div>\n                    <button type=\"submit\">add</button>\n                </div>\n            </form>\n        </div>\n    )\n}\nexport default AddEntryForm;\n","import React from 'react';\n\nconst FilterBox = (props) => {\n\n    const { searchName, handleSearchName } = props;\n    return (\n        <div>\n            Filter shown: <input\n                value={searchName}\n                onChange={handleSearchName} />\n        </div>\n    )\n}\nexport default FilterBox;","import React from 'react';\n\nconst DisplayDirectory = (props) => {\n\n    const { persons, showAll, searchName, removeEntry } = props;\n\n    const entriesToShow = showAll ? persons : persons.filter(p => p.name.toString().toLowerCase().indexOf(searchName.toLowerCase()) !== -1)\n    return (\n        <div>\n            {entriesToShow.map(p => <div key={p.id}><ul key={p.name}>ID: {p.id}<br></br> Name: {p.name}<br></br> Number: {p.number} <button key={p.id} onClick={() => removeEntry(p.id)}>Delete</button></ul> </div>)}\n        </div>\n    )\n}\nexport default DisplayDirectory;","import React from 'react';\nimport services from './services'\n\nconst EditEntryForm = (props) => {\n\n    const { persons, setPersons, editName, setEditName, editNumber, setEditNumber, handleNumberEdit, handleNameEdit, setToggleForm, toggleForm, showForm, editById, handleIdEdit, setEditById, setErrorMessage } = props;\n\n    const editEntry = (event) => {\n        event.preventDefault();\n        const listing = {\n            id: editById,\n            name: editName,\n            number: editNumber,\n        }\n        services.update(editById, listing).catch(error => {\n            setErrorMessage(\n                'Something went wrong.  Make sure the name is 3 character or longer, and the phone number is at least 8 digits'\n            )\n            setTimeout(() => {\n                setErrorMessage(null)\n            }, 5000)\n            return setPersons(persons.map(person => person))\n        }).then(setPersons(persons.map(person => person.id !== editById ? person : listing)))\n        setEditName('')\n        setEditNumber('')\n        setEditById('')\n        setToggleForm(false)\n    }\n    return (\n        <div>\n            <h2>Update Existing Entry By ID:</h2>\n            {!toggleForm ?\n                <div>\n                    <input value={editById} onChange={handleIdEdit} placeholder={'Enter ID'}></input><div>\n                        <button onClick={showForm}>Submit ID</button></div></div> :\n                <form onSubmit={editEntry}>\n                    <div>\n                        Name: <input\n                            value={editName}\n                            onChange={handleNameEdit}\n                            placeholder={'New name'} />\n                    </div>\n                    <div>\n                        Number: <input\n                            value={editNumber}\n                            onChange={handleNumberEdit} placeholder={'New number'} /></div>\n                    <div>\n                        <button onClick={showForm}>Go Back</button>\n                        <button type=\"submit\">Submit Update</button>\n                    </div>\n                </form>}\n        </div>\n\n    )\n}\nexport default EditEntryForm;\n","import React from 'react';\n\nconst SuccessMessage = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className=\"success\">\n            <h1>{message}</h1>\n        </div>\n    )\n}\nexport default SuccessMessage;","import React from 'react';\n\nconst ErrorMessage = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n    return (\n        <div className=\"error\" >\n            <h1 style={{ color: 'red' }}>{message}</h1>\n        </div>\n    )\n}\n\n\nexport default ErrorMessage;","import React, { useState, useEffect } from 'react'\nimport AddEntryForm from './components/AddEntryForm';\nimport FilterBox from './components/FilterBox';\nimport DisplayDirectory from './components/DisplayDirectory';\nimport services from './components/services'\nimport EditEntryForm from './components/EditEntryForm';\nimport SuccessMessage from './components/SuccessMessage';\nimport ErrorMessage from './components/ErrorMessage';\n\nconst App = () => {\n\n  //CONST VARIABLES\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [searchName, setSearchName] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [editName, setEditName] = useState('')\n  const [editNumber, setEditNumber] = useState('')\n  const [toggleForm, setToggleForm] = useState(false);\n  const [editById, setEditById] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const [successMessage, setSuccessMessage] = useState('')\n\n  useEffect(() => {\n    services.getAll()\n      .then(allPersons => {\n        setPersons(allPersons)\n      })\n  }, [])\n\n  //EVENT HANDLERS\n  const handlePersonInput = (event) => {\n    setNewName(event.target.value);\n  }\n  const handleNumberInput = (event) => {\n    setNewNumber(event.target.value);\n  }\n  const handleNumberEdit = (event) => {\n    setEditNumber(event.target.value);\n  }\n  const handleNameEdit = (event) => {\n    setEditName(event.target.value);\n  }\n  const handleIdEdit = (event) => {\n    setEditById(event.target.value);\n  }\n  const removeEntry = (id) => {\n    let result = window.confirm(`Are you sure you want to delete ${persons.filter(person => person.id === id).map(single => single.name)}?`)\n    if (result) {\n      services.remove(id).then(\n        setPersons(persons.filter(person => person.id !== id)\n        ))\n        .catch(error => {\n          setErrorMessage(\n            `That contact was already removed from server`\n          )\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n        })\n      setSuccessMessage('Contact successfully deleted')\n      setTimeout(() => {\n        setSuccessMessage(null)\n      }, 3000)\n    }\n  }\n\n  const handleSearchName = (event) => {\n    if (event.target.value.length > 0) {\n      setShowAll(false)\n      setSearchName(event.target.value);\n    } else {\n      setShowAll(true)\n      setSearchName(event.target.value);\n    }\n  }\n  const showForm = () => {\n    setToggleForm(!toggleForm);\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <SuccessMessage message={successMessage} />\n      <ErrorMessage message={errorMessage} />\n      <FilterBox\n        searchName={searchName}\n        handleSearchName={handleSearchName} />\n      <AddEntryForm\n        persons={persons}\n        setPersons={setPersons}\n        newName={newName}\n        setNewName={setNewName}\n        handlePersonInput={handlePersonInput}\n        handleNumberInput={handleNumberInput}\n        newNumber={newNumber}\n        setNewNumber={setNewNumber}\n        setSuccessMessage={setSuccessMessage}\n        errorMessage={errorMessage}\n        setErrorMessage={setErrorMessage}\n      />\n      <EditEntryForm\n        persons={persons}\n        setPersons={setPersons}\n        editName={editName}\n        setEditName={setEditName}\n        handleNameEdit={handleNameEdit}\n        handleNumberEdit={handleNumberEdit}\n        editNumber={editNumber}\n        setEditNumber={setEditNumber}\n        toggleForm={toggleForm}\n        setToggleForm={setToggleForm}\n        showForm={showForm}\n        editById={editById}\n        setEditById={setEditById}\n        handleIdEdit={handleIdEdit}\n        setErrorMessage={setErrorMessage}\n        setSuccessMessage={setSuccessMessage}\n      />\n      <h2>Numbers</h2>\n      <DisplayDirectory\n        setPersons={setPersons}\n        persons={persons}\n        showAll={showAll}\n        searchName={searchName}\n        removeEntry={removeEntry} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}